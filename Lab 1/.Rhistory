PPIACO <- read.csv(file.choose(), header = TRUE, sep = ",")
PPIACO$DATE <- as.yearmon(PPIACO$DATE, "%Y-%m")
library(forecast)
library(tidyverse)
PPIACO$DATE <- as.yearmon(PPIACO$DATE, "%Y-%m")
library(seasonal)
library(x12)
PPIACO$DATE <- as.yearmon(PPIACO$DATE, "%Y-%m")
PPIACO <- read.csv("PPIACO.csv", header = TRUE, sep = ",")
ggplot(PPIACO, aes(x = DATE, y = PPIACO)) + geom_line()
ggAcf(PPIACO$PPIACO)
ggPacf(PPIACO$PPIACO)
PPIACO <- seas(PPIACO$PPIACO, freq = 12)
ggplot(PPIACO, aes(x = DATE, y = PPIACO)) + geom_line()
ggplot(PPIACO, aes(x = DATE, y = PPIACO)) + geom_line()
ggAcf(PPIACO$PPIACO)
ggPacf(PPIACO$PPIACO)
ggplot(PPIACO, aes(x = DATE, y = PPIACO)) + geom_line()
ggAcf(PPIACO$PPIACO)
ggPacf(PPIACO$PPIACO)
PPIACO <- seasadj(PPIACO$PPIACO)
ggplot(PPIACO, aes(x = DATE, y = PPIACO)) + geom_line()
View(PPIACO)
PPIACO <- ts(PPIACO$PPIACO, start = c(1913, 1), frequency = 12)
PPIACO <- ts(PPIACO$PPIACO, start = c(1913, 1), frequency = 12)
plot(PPIACO)
PPIACO.decomp <- stl(PPIACO, s.window = "periodic")
plot(PPIACO.decomp)
plot(PPIACO.decomp$time.series[, "seasonal"])
plot(PPIACO.decomp$time.series[, "trend"])
plot(PPIACO.decomp$time.series[, "remainder"])
plot(PPIACO.decomp$time.series[, "seasonal"] + PPIACO.decomp$time.series[, "trend"])
plot(PPIACO.decomp$time.series[, "seasonal"] + PPIACO.decomp$time.series[, "trend"] + PPIACO.decomp$time.series[, "remainder"])
plot(PPIACO.decomp$time.series[, "seasonal"] + PPIACO.decomp$time.series[, "trend"] + PPIACO.decomp$time.series[, "remainder"] + PPIACO)
plot(PPIACO.decomp$time.series[, "seasonal"] + PPIACO.decomp$time.series[, "trend"] + PPIACO.decomp$time.series[, "remainder"] + PPIACO)
plot(PPIACO.decomp$time.series[, "seasonal"] + PPIACO.decomp$time.series[, "trend"] + PPIACO.decomp$time.series[, "remainder"] + PPIACO)
tsdisplay(PPIACO)
PPIACO.decomp <- decompose(PPIACO)
plot(PPIACO.decomp)
PPIACO.deseas <- seasadj(PPIACO)
PPIACO.deseas <- ts(PPIACO.deseas, start = c(1913, 1), frequency = 12)
tsdisplay(PPIACO.deseas)
PPIACO.deseas <- seasadj(PPIACO)
PPIACO <- read.csv("PPIACO.csv", header = TRUE, sep = ",")
PPIACO <- read.csv(file.choose(), header = TRUE, sep = ",")
PPIACO.deseas <- seasadj(PPIACO$PPIACO)
library(bsvarSIGNs)
data(optimism)
sign_irf = matrix(c(0,1,rep(NA,23)),5,5)
sign_irf
specification = specify_bsvarSIGN$new(optimism * 1000,
p = 4,
sign_irf = sign_irf)
posterior = estimate(specification, S = 100)
irf = compute_impulse_responses(posterior, horizon = 40)
plot(irf, probability = 0.68)
hd = compute_historical_decompositions(posterior)
plot(hd)
fevd = compute_variance_decompositions(posterior, horizon = 8)
plot(fevd)
# Sample from predictive density 1 year ahead
predictive = forecast(posterior, 4)
plot(predictive)
cf = matrix(NA, 2,5)
cf
cf = matrix(NA, 2,5)
cf[,3] = tail(optimism, 1)[3]
cf
View(optimism)
predictive = forecast(posterior, 2, conditional_forecast = cf)
# Sample from predictive density 1 year ahead
predictive = forecast(posterior, 4)
plot(predictive)
cf = matrix(NA, 2,5)
cf[,3] = tail(optimism, 1)[3]
predictive = forecast(posterior, 2, conditional_forecast = cf)
library(bsvarSIGNs)
# investigate the effects of the contractionary monetary policy shock
data(monetary)
# specify identifying restrictions:
# + sign restrictions on the impulse responses at horizons from 0 to 5
sign_irf       = matrix(NA, 6, 6)
sign_irf[, 1]  = c(NA, -1, -1, NA, -1, 1)
sign_irf       = array(sign_irf, dim = c(6, 6, 6))
# + narrative sign restriction: the shock is positive in October 1979
sign_narrative = list(
specify_narrative(start = 166, periods = 1, type = "S", sign = 1, shock = 1),
specify_narrative(start = 166, periods = 1, type = "B", sign = 1, shock = 1, var = 6)
)
# specify the model
specification  = specify_bsvarSIGN$new(monetary       * 100,
p              = 12,
sign_irf       = sign_irf,
sign_narrative = sign_narrative)
# estimate the model
posterior      = estimate(specification, S = 100)
# estimate the model
posterior      = estimate(specification, S = 100)
setwd("/Users/justineloriaga/Documents/QTM 100/Lab 1")
arbuthnot <- read.csv("arbuthnot.csv")
arbuthnot <- read.csv("arbuthnot.csv", header = TRUE)
arbuthnot <- read.csv("arbuthnot.csv", header = TRUE)
setwd("/Users/justineloriaga/Documents/QTM 100/Lab 1")
arbuthnot <- read.csv("arbuthnot.csv", header = TRUE)
arbuthnot
head(arbuthnot)
tail(arbuthnot)
dim(arbuthnot)
summary(arbuthnot)
summary(arbuthnot)
arbuthnot$boys
arbuthnot$boys
arbuthnot$girls
5218 + 4683
5218/ (5218 + 4683)
5218/ (5218 + 4683)
arbuthnot$propBoys <- arbuthnot$boys /(arbuthnot$boys + arbuthnot$girls)
# View the new variable
arbuthnot
arbuthnot$boys > arbuthnot$girls
sum(arbuthnot$boys > arbuthnot$girls)
arbuthnot$boys > arbuthnot$girls
sum(arbuthnot$boys > arbuthnot$girls)
plot(x = arbuthnot$year, y = arbuthnot$propBoys)
plot(x = arbuthnot$year, y = arbuthnot$propBoys, type = "l")
?plot
?par
# Changing colors
plot(x = arbuthnot$year, y = arbuthnot$propBoys, type = "l", col = 2)
plot(x = arbuthnot$year, y = arbuthnot$propBoys, type = "l", col = "plum")
colors()
present <- read.csv("present.csv", header = TRUE)
# Column names
present
# Dimensions of the data frame
dim(present)
# What years in the dataset?
summary(present)
# On propotions
present$boys > present$girls
sum(present$boys > present$girls)
# Plot on the proportion of boys over time
propBoys <- present$boys/(present$boys + present$girls)
# Plot on the proportion of boys over time
propBoys <- present$boys/(present$boys + present$girls)
# Plot on the proportion of boys over time
present$propBoys <- present$boys/(present$boys + present$girls)
plot(x = present$year, y = present$)
plot(x = present$year, y = present$propBoys)
# Add a title
plot(x = present$year, y = present$propBoys, title = "Proportion of Boys to Total (1940-2002)")
plot?
?plot
?plot
# Add a title
plot(x = present$year, y = present$propBoys, main="")
title(main = "Propotion of Boys (1940 - 2002)")
# How many years did the proportion exceed 0.512?
sum(present$propBoys > 0.512)
# What year was the highest number of births
present$tot_birth <- present$boys + present$girls
max(tot_birth)
max(present$tot_birth)
View(present)
setwd("/Users/justineloriaga/Documents/QTM 100/Lab 2")
# Loading the .txt file
babies <- read.table("babies.txt", header = TRUE)
babies
# Finding out the variable type
str(babies)
# Finding out the variable type
str(babies)
# Summarizing the dataset
summary(babies)
# Summarizing the dataset
summary(babies)
# Recoding parity and smoke to factor/categorical variables
babies$parityf <- factor(babies$parity,labels=c("first born","otherwise"))
babies$smokef <- factor(babies$smoke,labels=c("not now","yes now"))
# Summarizing numeric variables
summary(babies$bwt)
mean(babies$bwt)
sd(babies$bwt)
min(babies$bwt)
max(babies$bwt)
median(babies$bwt)
range(babies$bwt)
IQR(babies$bwt)
# Comparing numeric by factor variables
tapply(X = babies$bwt, INDEX = babies$smokef, FUN = sd)
tapply(X = babies$bwt, INDEX = babies$parityf, FUN = mean)
# Comparing numeric by factor variables
tapply(X = babies$bwt, INDEX = babies$smokef, FUN = sd)
tapply(X = babies$bwt, INDEX = babies$parityf, FUN = mean)
# Visualizing numeric variables
hist(babies$bwt)
boxplot(babies$bwt)
boxplot(babies$bwt ~ babies$smokef)
plot(x = babies$gestation, y = babies$bwt)
table(babies$smokef)
smk.tab <- table(babies$smokef)
smk.tab
addmargins(smk.tab)
# Summarizing a categorical variable
smk.tab <- table(babies$smokef)
smk.tab
addmargins(smk.tab)
# Summarizing a categorical variable
smk.tab <- table(babies$smokef)
smk.tab
addmargins(smk.tab)
# Summarizing two categorical variables
smk.par.tab <- table(babies$smokef,babies$parityf)
addmargins(smk.par.tab)
prop.table(smk.par.tab)
prop.table(smk.par.tab, margin = 1)
prop.table(smk.par.tab, margin = 2)
# Row and Column Proportions
prop.table(smk.par.tab, margin = 1)
prop.table(smk.par.tab, margin = 2)
# Creating a bar chart
barplot(smk.par.tab)
barplot(smk.par.tab, beside = T, legend.text = T)
barplot(prop.table(smk.par.tab, margin=2), beside = F, legend.text = T)
barplot(prop.table(smk.par.tab, margin=2), beside = T, legend.text = T)
barplot(prop.table(smk.par.tab, margin=2), beside = F, legend.text = T)
# Creating a bar chart
barplot(smk.par.tab)
barplot(smk.par.tab, beside = T, legend.text = T)
barplot(prop.table(smk.par.tab, margin=2), beside = F, legend.text = T)
setwd("/Users/justineloriaga/Documents/QTM 100/Lab 1")
arbuthnot <- read.csv("arbuthnot.csv", header = TRUE)
mike <- read.csv("arbuthnot.csv", header = TRUE)
arbuthnot <- read.csv("arbuthnot.csv", header = TRUE)
arbuthnot <- read.csv("arbuthnot.csv", header = TRUE)
arbuthnot
View(arbuthnot)
head(arbuthnot)
tail(arbuthnot)
# Dimensions of the dataset
dim(arbuthnot)
# Get an overview of the dataset
summary(arbuthnot)
# Getting just the column for the boys
arbuthnot$boys
arbuthnot$girls
5218 + 4683
# Calculating the proportion of boys
arbuthnot$propBoys <- arbuthnot$boys / (arbuthnot$boys + arbuthnot$girls)
arbuthnot$propBoys
# Comparing births between boys and girls
arbuthnot$boys > arbuthnot$girls
sum(arbuthnot$boys > arbuthnot$girls)
# Plotting Data
plot(x = arbuthnot$year, y = arbuthnot$propBoys)
plot(x = arbuthnot$year, y = arbuthnot$propBoys, type = "l")
plot(x = arbuthnot$year, y = arbuthnot$propBoys, type = "l", col = "plum")
plot(x = arbuthnot$year, y = arbuthnot$propBoys, type = "l", col = "blue")
?plot
