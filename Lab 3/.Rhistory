PPIACO <- read.csv(file.choose(), header = TRUE, sep = ",")
PPIACO$DATE <- as.yearmon(PPIACO$DATE, "%Y-%m")
library(forecast)
library(tidyverse)
PPIACO$DATE <- as.yearmon(PPIACO$DATE, "%Y-%m")
library(seasonal)
library(x12)
PPIACO$DATE <- as.yearmon(PPIACO$DATE, "%Y-%m")
PPIACO <- read.csv("PPIACO.csv", header = TRUE, sep = ",")
ggplot(PPIACO, aes(x = DATE, y = PPIACO)) + geom_line()
ggAcf(PPIACO$PPIACO)
ggPacf(PPIACO$PPIACO)
PPIACO <- seas(PPIACO$PPIACO, freq = 12)
ggplot(PPIACO, aes(x = DATE, y = PPIACO)) + geom_line()
ggplot(PPIACO, aes(x = DATE, y = PPIACO)) + geom_line()
ggAcf(PPIACO$PPIACO)
ggPacf(PPIACO$PPIACO)
ggplot(PPIACO, aes(x = DATE, y = PPIACO)) + geom_line()
ggAcf(PPIACO$PPIACO)
ggPacf(PPIACO$PPIACO)
PPIACO <- seasadj(PPIACO$PPIACO)
ggplot(PPIACO, aes(x = DATE, y = PPIACO)) + geom_line()
View(PPIACO)
PPIACO <- ts(PPIACO$PPIACO, start = c(1913, 1), frequency = 12)
PPIACO <- ts(PPIACO$PPIACO, start = c(1913, 1), frequency = 12)
plot(PPIACO)
PPIACO.decomp <- stl(PPIACO, s.window = "periodic")
plot(PPIACO.decomp)
plot(PPIACO.decomp$time.series[, "seasonal"])
plot(PPIACO.decomp$time.series[, "trend"])
plot(PPIACO.decomp$time.series[, "remainder"])
plot(PPIACO.decomp$time.series[, "seasonal"] + PPIACO.decomp$time.series[, "trend"])
plot(PPIACO.decomp$time.series[, "seasonal"] + PPIACO.decomp$time.series[, "trend"] + PPIACO.decomp$time.series[, "remainder"])
plot(PPIACO.decomp$time.series[, "seasonal"] + PPIACO.decomp$time.series[, "trend"] + PPIACO.decomp$time.series[, "remainder"] + PPIACO)
plot(PPIACO.decomp$time.series[, "seasonal"] + PPIACO.decomp$time.series[, "trend"] + PPIACO.decomp$time.series[, "remainder"] + PPIACO)
plot(PPIACO.decomp$time.series[, "seasonal"] + PPIACO.decomp$time.series[, "trend"] + PPIACO.decomp$time.series[, "remainder"] + PPIACO)
tsdisplay(PPIACO)
PPIACO.decomp <- decompose(PPIACO)
plot(PPIACO.decomp)
PPIACO.deseas <- seasadj(PPIACO)
PPIACO.deseas <- ts(PPIACO.deseas, start = c(1913, 1), frequency = 12)
tsdisplay(PPIACO.deseas)
PPIACO.deseas <- seasadj(PPIACO)
PPIACO <- read.csv("PPIACO.csv", header = TRUE, sep = ",")
PPIACO <- read.csv(file.choose(), header = TRUE, sep = ",")
PPIACO.deseas <- seasadj(PPIACO$PPIACO)
library(bsvarSIGNs)
data(optimism)
sign_irf = matrix(c(0,1,rep(NA,23)),5,5)
sign_irf
specification = specify_bsvarSIGN$new(optimism * 1000,
p = 4,
sign_irf = sign_irf)
posterior = estimate(specification, S = 100)
irf = compute_impulse_responses(posterior, horizon = 40)
plot(irf, probability = 0.68)
hd = compute_historical_decompositions(posterior)
plot(hd)
fevd = compute_variance_decompositions(posterior, horizon = 8)
plot(fevd)
# Sample from predictive density 1 year ahead
predictive = forecast(posterior, 4)
plot(predictive)
cf = matrix(NA, 2,5)
cf
cf = matrix(NA, 2,5)
cf[,3] = tail(optimism, 1)[3]
cf
View(optimism)
predictive = forecast(posterior, 2, conditional_forecast = cf)
# Sample from predictive density 1 year ahead
predictive = forecast(posterior, 4)
plot(predictive)
cf = matrix(NA, 2,5)
cf[,3] = tail(optimism, 1)[3]
predictive = forecast(posterior, 2, conditional_forecast = cf)
library(bsvarSIGNs)
# investigate the effects of the contractionary monetary policy shock
data(monetary)
# specify identifying restrictions:
# + sign restrictions on the impulse responses at horizons from 0 to 5
sign_irf       = matrix(NA, 6, 6)
sign_irf[, 1]  = c(NA, -1, -1, NA, -1, 1)
sign_irf       = array(sign_irf, dim = c(6, 6, 6))
# + narrative sign restriction: the shock is positive in October 1979
sign_narrative = list(
specify_narrative(start = 166, periods = 1, type = "S", sign = 1, shock = 1),
specify_narrative(start = 166, periods = 1, type = "B", sign = 1, shock = 1, var = 6)
)
# specify the model
specification  = specify_bsvarSIGN$new(monetary       * 100,
p              = 12,
sign_irf       = sign_irf,
sign_narrative = sign_narrative)
# estimate the model
posterior      = estimate(specification, S = 100)
# estimate the model
posterior      = estimate(specification, S = 100)
acs <- read.csv("~/Documents/QTM 100/Old Materials/weekly_labs/Lab_Datasets/acs.csv")
View(acs)
table(acs$age)
hist(acs$Age)
table(acs$Age)
table(acs$Age)
hist(acs$Age)
acs$Age2 <- acs$Age
acs$Age2 == 130
acs$Age2 > 100
acs$Age2[157]
acs$Age2[157] <- NA
mean(acs$Age2)
mean(acs$Age2, na.rm = T)
acs$AgeCategory <- factor(NA, levels = c("child", "adult", "senior citizen"))
acs$AgeCategory[acs$Age2<=18] <- "child"
acs$AgeCategory[acs$Age2 > 18 & acs$Age2 <= 55] <- "adult"
acs$AgeCategory[acs$Age2 > 55] <- "senior citizen"
table(acs$Age2, acs$AgeCategory)
table(acs$Age2, acs$AgeCategory)
fruitfly <- read.csv("~/Documents/QTM 100/Old Materials/weekly_labs/Lab_Datasets/fruitfly.csv")
View(fruitfly)
hist(fruitfly$lifespan,
main = "Histogram of fruitfly lifespans", # main = for the title
xlab = "Lifespan (days)", # xlab = for the x-axis label
ylab = "") # ylab = for the y-axis label
qqnorm(fruitfly$lifespan)
qqline(fruitfly$lifespan)
mean(fruitfly$lifespan)
sd(fruitfly$lifespan)
pnorm(q = 50, mean = 57.44, sd = 17.56389)
pnorm(q = 50, mean = 57.4, sd = 17.6)
pnorm(q = 50, mean = 57.44, sd = 17.56389)
pnorm(q = 50, mean = 57.44, sd = 17.56389)
Fruitfly8 <- data.frame(x = 0:8, prob = dbinom(x = 0:8, size = 8, prob = 0.663))
Fruitfly8
Fruitfly8 <- data.frame(x = 0:8, prob = dbinom(x = 0:8, size = 8, prob = 0.663))
Fruitfly8
yrbss2013 <- read.csv("~/Documents/QTM 100/Old Materials/weekly_labs/Lab_Datasets/yrbss2013.csv")
View(yrbss2013)
table(ybrss$bullied)
ybrss <- ybrss2013
yrbss <- yrbss2013
table(yrbss$bullied)
table(yrbss$bullied)
prop.table(table(yrbss$bullied))
barplot(prop.table(table(yrbss$bullied)))
bullied_p_hat10 <- rep(NA, 1000)
for(i in 1:1000){
samp <- sample(yrbss$bullied, 10)
bullied_p_hat10[i] <- mean(samp == "yes")
}
bullied_p_hat
bullied_p_hat10 <- rep(NA, 1000)
bullied_p_hat10
for(i in 1:1000){
samp <- sample(yrbss$bullied, 10)
bullied_p_hat10[i] <- mean(samp == "yes")
}
bullied_p_hat10
hist(bullied_p_hat10)
bullied_p_hat200 <- rep(NA, 1000)
for(i in 1:1000){
samp <- sample(yrbss$bullied, 200)
bullied_p_hat10[i] <- mean(samp == "yes")
}
bullied_p_hat10
hist(bullied_p_hat10)
hist(bullied_p_hat200)
bullied_p_hat200 <- rep(NA, 1000)
for(i in 1:1000){
samp <- sample(yrbss$bullied, 200)
bullied_p_hat10[i] <- mean(samp == "yes")
}
bullied_p_hat200[i] <- mean(samp == "yes")
for(i in 1:1000){
samp <- sample(yrbss$bullied, 200)
bullied_p_hat200[i] <- mean(samp == "yes")
}
bullied_p_hat10
hist(bullied_p_hat200)
babies <- read.csv("~/Documents/QTM 100/Lab 2/babies.txt", sep="")
View(babies)
babies
str(babies)
# Let's have some basic descriptive stats on the data
summary(babies)
babies$parityf <- factor(babies$parity, labels = c("first born","otherwise"))
babies$smokef <- factor(babies$smoke, labels = c("not now","yes now"))
babies
tail(babies)
summary(babies$bwt)
mean(babies$bwt)
median(babies$bwt)
min(babies$bwt)
max(babies$bwt)
sd(babies$bwt)
tapply(X = babies$bwt,INDEX = babies$smokef, FUN = sd)
tapply(X = babies$bwt,INDEX = babies$parityf, FUN = mean)
# Graphing using a histogram
hist(babies$bwt)
# Graphing using a boxplot
boxplot(babies$bwt)
# Graphing Numeric and Factor Variables Together
boxplot(x = babies$bwt, y = babies$smokef)
# Graphing Numeric and Factor Variables Together
boxplot(x = babies$bwt, y = babies$smokef)
# Graphing Numeric and Factor Variables Together
boxplot(babies$bwt, babies$smokef)
# Graphing Numeric and Factor Variables Together
boxplot(babies$bwt ~ babies$smokef)
tapply(X = babies$bwt,INDEX = babies$smokef, FUN = mean)
tapply(X = babies$bwt,INDEX = babies$smokef, FUN = median)
# Graphing a scatter plot
plot(x = babies$gestation, y = babies$bwt)
# Graphing a scatter plot
plot(babies$gestation,babies$bwt)
# Using the table() function
smk.tab <- table(babies$smokef)
addmargins(smk.tab)
# Using a Proportions Table
smk.par.tab <- table(x = babies$smokef, y = babies$parityf)
addmargins(smk.par.tab)
prop.table(smk.par.tab)
# Adding margins
prop.table(smk.par.tab, margin = 1)
prop.table(smk.par.tab, margin = 2)
# Do a bar plot
barplot(smk.par.tab)
# Do a bar plot
barplot(smk.par.tab, beside = T, legend.text = T)
# Do a barplot of a whole prop table
barplot(prop.table(smk.par.tab, margin=2), beside = F,
legend.text = T)
# Do a barplot of a whole prop table
barplot(prop.table(smk.par.tab, margin=2), beside = F,
legend.text = T)
# Do a barplot of a whole prop table
barplot(prop.table(smk.par.tab, margin=2), beside = T,
legend.text = T)
# Do a barplot of a whole prop table
barplot(prop.table(smk.par.tab, margin=2), beside = FALSE,
legend.text = T)
# Do a barplot of a whole prop table
barplot(prop.table(smk.par.tab, margin=2), beside = F,
legend.text = T)
acs <- read.csv("~/Documents/QTM 100/Lab 3/acs.csv")
View(acs)
setwd("/Users/justineloriaga/Documents/QTM 100/Lab 3")
acs <- read.csc("acs.csv", header = TRUE)
acs <- read.csv("acs.csv", header = TRUE)
# Let's view the structure of the dataset
str(acs)
# View some general statistics
summary(acs)
# Visualize age values
table(acs$Age)
# Doing a histogram for age
hist(acs$Age)
# Creating a cleaned version of the age variable
acs$new_age <- acs$Age
View(acs)
# Creating a cleaned version of the age variable
acs$Age2 <- acs$Age
acs$new_age == 130
acs$new_age > 100
acs$new_age[157]
acs$new_age[157] <- NA
acs$new_age[157]
# Verify correct recode
summary(acs$Age2)
# Verify correct recode
summary(acs$new_age)
# Accessing/Indexing both rows and columns
acs[157,2] #Bring up the 157th row and the second column
acs[acs$new_age >100,]
mean(acs$new_age)
mean(acs$new_age, na.rm= T)
acs$AgeCategory <- factor(NA, levels = c("child","adult","senior citizen"))
View(acs)
acs$AgeCategory[acs$new_age<=18] <- "child"
acs$AgeCategory[acs$new_age>18 & acs$new_age <=55] <- "adult"
acs$AgeCategory[acs$Age2>55] <- "senior citizen"
acs$new_race <- factor(NA,levels=c("white","non-white"))
acs$new_race[acs$Race == "white"] <- "white"
acs$RaceNew[acs$Race == "asian" | acs$Race == "black"| acs$Race == "other"] <- "non-white"
acs$new_race[acs$Race == "asian" | acs$Race == "black"| acs$Race == "other"] <- "non-white"
